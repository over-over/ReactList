{"version":3,"sources":["components/changelog-service-context/changelog-service-context.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/hoc/with-changelog-service.js","actions/index.js","utils/compose.js","components/changelog/changelog.js","components/changelog/index.js","components/form/form.js","components/form/index.js","components/app/index.js","components/app/app.js","services/changelog-service.js","reducers/changelog.js","reducers/index.js","store.js","index.js"],"names":["React","createContext","ChangelogServiceProvider","Provider","ChangelogServiceConsumer","Consumer","ErrorBoundry","state","hasError","this","setState","props","children","Component","withChangelogService","Wrapped","changelogService","fetchData","dispatch","type","payload","getData","changelogAddedRow","data","filterRecent","filterShowAll","compose","funcs","comp","reduceRight","wrapped","f","Changelog","renderRoW","item","idx","id","date","version","included","text","includedCell","className","key","dangerouslySetInnerHTML","__html","changelog","error","onClick","onFilterRecent","onFilterShowAll","map","connect","Form","formStateUpdate","value","stateKey","formSubmit","event","preventDefault","length","formSubmitProp","onSubmit","htmlFor","required","onChange","e","target","checked","editor","ClassicEditor","App","ChanglelogService","updateChangelog","action","undefined","prevLog","filter","Date","reducer","store","createStore","applyMiddleware","thunkMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cde57d8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst { \r\n    Provider: ChangelogServiceProvider, \r\n    Consumer: ChangelogServiceConsumer \r\n    } = React.createContext();\r\n\r\nexport {\r\n    ChangelogServiceProvider,\r\n    ChangelogServiceConsumer\r\n}","import ErrorBoundry from './error-boundry';\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false,\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport { ChangelogServiceConsumer } from '../changelog-service-context';\r\n\r\nconst withChangelogService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <ChangelogServiceConsumer>\r\n            {\r\n               (changelogService) => {\r\n                   return <Wrapped {...props} changelogService={changelogService} />\r\n                } \r\n            }   \r\n            </ChangelogServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withChangelogService;","const dataLoaded = (data) => {\r\n    return {\r\n        type: 'FETCH_DATA_SUCCESS',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nconst fetchData = (changelogService, dispatch) => () => {\r\n    dispatch(dataLoaded(changelogService.getData()));\r\n}\r\n\r\nexport const formStateUpdate = (data) => {\r\n    return {\r\n        type: 'FORM_UPDATE_STATE',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nconst formSubmitted = (data) => (dispatch) => {\r\n    dispatch(changelogAddedRow(data));\r\n}\r\n\r\nexport const changelogAddedRow = (data) => {\r\n    return {\r\n        type: 'CHANGELOG_ROW_ADDED',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nconst filterRecent = (dispatch) => () => {\r\n    dispatch({type: 'FILTER_RECENT'});\r\n}\r\n\r\nconst filterShowAll = (dispatch) => () => {\r\n    dispatch({type: 'FILTER_SHOW_ALL'});\r\n}\r\n\r\nexport {\r\n    fetchData,\r\n    formSubmitted,\r\n    filterRecent,\r\n    filterShowAll\r\n};","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n}\r\n\r\nexport default compose;","import React, {Component} from 'react';\r\nimport './changelog.css';\r\n\r\nimport { withChangelogService } from '../hoc';\r\nimport { fetchData, filterRecent, filterShowAll } from '../../actions';\r\nimport { compose } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nclass Changelog extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchData();\r\n    }\r\n\r\n    renderRoW = (item, idx) => {\r\n        const {id, date, version, included, text} = item;\r\n        let includedCell = <td className=\"text-center table-success\">+</td>;\r\n        if (!included) {\r\n            includedCell = <td className=\"text-center table-danger\">-</td>;\r\n        }\r\n        return (\r\n            <tr key={id}>\r\n                {includedCell}\r\n                <td>{date}</td>\r\n                <td>{version}</td>\r\n                <td dangerouslySetInnerHTML={{\r\n                    __html: text\r\n                }}></td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const {changelog, error} = this.props;\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"changelog\">\r\n\r\n                <div className=\"mb-4\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-success mr-2\"\r\n                        onClick={() => this.props.onFilterRecent()}\r\n                        >Recently Included</button>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-secondary\"\r\n                        onClick={() => this.props.onFilterShowAll()}\r\n                        >Show All</button>\r\n                </div>\r\n\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th className=\"changelog-changed\">Changed</th>\r\n                            <th>Date</th>\r\n                            <th>Version</th>\r\n                            <th>Text</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            changelog.map(this.renderRoW)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ changelog, error}) => {\r\n    return {changelog, error};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { changelogService }) => {\r\n  return {\r\n    fetchData: fetchData(changelogService, dispatch),\r\n    onFilterRecent: filterRecent(dispatch),\r\n    onFilterShowAll: filterShowAll(dispatch),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n    withChangelogService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Changelog);","import Changelog from './changelog';\r\nexport default Changelog;","import React, {Component} from 'react';\r\nimport './form.css';\r\nimport { formSubmitted } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nclass Form extends Component {\r\n\r\n    state = {\r\n        id: null,\r\n        date: null,\r\n        version: null,\r\n        included: true,\r\n        text: null,\r\n    }\r\n\r\n    formStateUpdate = (value, stateKey) => {\r\n        this.setState({ [stateKey]: value });\r\n    }\r\n    \r\n    formSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ id: this.props.changelog.length }, () => this.props.formSubmitProp(this.state));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"row form\" \r\n                onSubmit = { this.formSubmit }>\r\n                <div className=\"form-group col-4\">\r\n                    <label htmlFor=\"formDate\">Date</label>\r\n                    <input required type=\"date\" id=\"formDate\" className=\"form-control\" onChange={(e) => this.formStateUpdate(e.target.value,'date')}/>\r\n                </div>\r\n                <div className=\"form-group col-4\">\r\n                    <label htmlFor=\"formVersion\">Version</label>\r\n                    <input required type=\"text\" id=\"formVersion\" className=\"form-control\" onChange={(e) => this.formStateUpdate(e.target.value,'version')}/>\r\n                </div>\r\n                <div className=\"form-group col-12\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" checked={this.state.included} id=\"customCheck1\" onChange={(e) => this.formStateUpdate(e.target.checked,'included')}/>\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Include</label>\r\n                    </div>  \r\n                </div>\r\n                <div className=\"form-group col-12\">\r\n                    <CKEditor\r\n                        editor={ ClassicEditor }\r\n                        data=\"\"\r\n                        className=\"form-control\"\r\n                        onChange={ ( event, editor ) => {\r\n                            const data = editor.getData();\r\n                            this.formStateUpdate(data,'text');\r\n                        } }\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-2\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </div>           \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({changelog}) => {\r\n    return {changelog};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        formSubmitProp: (state) => dispatch(formSubmitted(state)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import Form from './form';\r\nexport default Form;","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport './app.css';\r\n\r\nimport Changelog from '../changelog';\r\nimport Form from '../form';\r\n\r\nconst App = () => {\r\n    return (\r\n        <main className=\"container mt-5\">\r\n            <Changelog />\r\n            <Form />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;","export default class ChanglelogService {\r\n\r\n    data = [\r\n        {\r\n            id: 0,\r\n            date: '2018-09-24',\r\n            version: '1.00',\r\n            included: true,\r\n            text: 'Added new feature',\r\n        },\r\n        {\r\n            id: 1,\r\n            date: '2019-03-01',\r\n            version: '1.05f',\r\n            included: false,\r\n            text: 'Removed old feature',\r\n        },\r\n    ];\r\n\r\n    getData() {\r\n        return this.data;\r\n    }\r\n\r\n}","const updateChangelog = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            changelog: [],\r\n            error: null, \r\n        }\r\n    };\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_DATA_REQUEST':\r\n            return {\r\n                changelog: [],\r\n                error: null,\r\n            };\r\n        case 'FETCH_DATA_SUCCESS':\r\n            return {\r\n                changelog: action.payload,\r\n                error: null,\r\n            };\r\n        case 'FETCH_DATA_FAILURE':\r\n            return {\r\n                changelog: [],\r\n                error: action.payload,\r\n            };\r\n        case 'CHANGELOG_ROW_ADDED':\r\n            return {\r\n                changelog: [\r\n                    ...state.changelog,\r\n                    action.payload,\r\n                ],\r\n                error: null,\r\n            }\r\n        case 'FILTER_RECENT':\r\n            return {\r\n                prevLog: state.changelog,\r\n                changelog: state.changelog.filter(item => (new Date (item.date) < new Date()) && item.included),\r\n                error: null,\r\n            };\r\n        case 'FILTER_SHOW_ALL':\r\n            return {\r\n                changelog: state.prevLog,\r\n                error: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default updateChangelog;","import updateChangelog from './changelog';\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    return updateChangelog(state, action);\r\n}\r\n\r\nexport default reducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducer from './reducers';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, compose(applyMiddleware(thunkMiddleware),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ChangelogServiceProvider } from './components/changelog-service-context';\n\nimport ErrorBoundry from './components/error-boundry';\nimport App from './components/app';\nimport ChanglelogService from './services/changelog-service';\nimport store from './store';\n\nconst changelogService = new ChanglelogService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <ChangelogServiceProvider value={changelogService}>\n                <App />\n            </ChangelogServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}